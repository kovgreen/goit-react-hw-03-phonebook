{"version":3,"sources":["Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.js","Components/Contact/Contact.styled.js","Components/Contact/Contact.js","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.js","Components/Filter/FilterValue.styled.js","Components/Filter/FilterValue.js","Components/Filter/findContactsItem.js","Components/Filter/filterContacts.js","Components/Phonebook/Phonebook.styled.js","Components/Phonebook/Phonebook.js","utils/localStorageMethods.js","App.js","index.js"],"names":["FormBlock","styled","form","Label","label","Input","input","Button","button","ContactForm","onAddContact","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","type","value","onChange","target","autoComplete","ContactBlock","div","ContactName","span","ContactNumber","ContactButtonDelete","Contact","onDeleteContact","onClick","List","ul","Item","li","ContactList","items","length","map","item","key","id","FilterBlock","FilterValue","onChangeFilter","findContactsItem","contacts","contact","find","filterContacts","filter","toLowerCase","includes","PhonebookBlock","PhonebookMainTitle","h1","PhonebookTitle","h2","Phonebook","setContacts","setFilter","useEffect","persistedContacts","localStorage","getItem","JSON","parse","err","Error","get","setItem","stringify","save","filteredContacts","contactToAdd","uuidv4","trim","alert","isValidContact","filtered","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fc1ba30.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormBlock = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 2px;\n  border: 3px solid rgb(120, 120, 120);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 20px;\n  display: block;\n  width: 100px;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormBlock, Label, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = ({ onAddContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddContact({ name, number });\n    resetForm();\n  };\n\n  return (\n    <FormBlock onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormBlock>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 10px;\n`;\n\nexport const ContactButtonDelete = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactBlock,\n  ContactName,\n  ContactNumber,\n  ContactButtonDelete,\n} from './Contact.styled';\n\nconst Contact = ({ name, number, onDeleteContact }) => {\n  return (\n    <ContactBlock>\n      <ContactName>Name: {name}</ContactName>\n      <ContactNumber>Number: {number}</ContactNumber>\n      <ContactButtonDelete type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </ContactButtonDelete>\n    </ContactBlock>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  padding: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport { List, Item } from './ContactList.styled';\n\nconst ContactList = ({ items, onDeleteContact }) =>\n  items.length > 0 && (\n    <List>\n      {items.map(item => (\n        <Item key={item.id}>\n          <Contact {...item} onDeleteContact={() => onDeleteContact(item.id)} />\n        </Item>\n      ))}\n    </List>\n  );\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterBlock = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 3px solid rgb(120, 120, 120);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterBlock, Label, Input } from './FilterValue.styled';\n\nconst FilterValue = ({ value, onChangeFilter }) => (\n  <FilterBlock>\n    <Label>Find contacts by name</Label>\n    <Input type=\"text\" value={value} onChange={onChangeFilter} />\n  </FilterBlock>\n);\n\nFilterValue.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default FilterValue;\n","const findContactsItem = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\nexport default findContactsItem;\n","const filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nexport default filterContacts;\n","import styled from 'styled-components';\r\n\r\nexport const PhonebookBlock = styled.div`\r\n  max-width: 420px;\r\n  min-width: 310px;\r\n  margin: 0 auto;\r\n  padding: 0 5px;\r\n`;\r\n\r\nexport const PhonebookMainTitle = styled.h1`\r\n  font-size: 30px;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const PhonebookTitle = styled.h2`\r\n  font-size: 20px;\r\n  line-height: 1.2;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport FilterValue from '../Filter/FilterValue';\r\nimport findContactsItem from '../Filter/findContactsItem';\r\nimport filterContacts from '../Filter/filterContacts';\r\nimport { save, get } from '../../utils/localStorageMethods';\r\nimport {\r\n  PhonebookBlock,\r\n  PhonebookMainTitle,\r\n  PhonebookTitle,\r\n} from './Phonebook.styled';\r\n\r\nconst Phonebook = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const persistedContacts = get('contacts');\r\n    if (persistedContacts) {\r\n      setContacts(persistedContacts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    save('contacts', contacts);\r\n  }, [contacts]);\r\n\r\n  const changeFilter = e => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n\r\n  const isValidContact = ({ name, number }) => {\r\n    if (name.length <= 1 || name.trim() === 0) {\r\n      alert(`Your name is not valid. Please enter correct information.`);\r\n      return false;\r\n    }\r\n    if (!number) {\r\n      alert(`Your number is not valid. Please enter correct information.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addContact = contact => {\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    if (isValidContact(contact)) {\r\n      const stateContact = findContactsItem(contacts, contact);\r\n      if (stateContact) {\r\n        alert(`${contact.name} is already in contacts.`);\r\n        return;\r\n      }\r\n\r\n      setContacts([...contacts, contactToAdd]);\r\n    }\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    const filtered = contacts.filter(contact => contact.id !== id);\r\n    setContacts(filtered);\r\n  };\r\n\r\n  const filteredContacts = filterContacts(contacts, filter);\r\n\r\n  return (\r\n    <PhonebookBlock>\r\n      <PhonebookMainTitle>Phonebook</PhonebookMainTitle>\r\n      <ContactForm onAddContact={addContact} />\r\n\r\n      <PhonebookTitle>Contacts</PhonebookTitle>\r\n      {contacts.length >= 2 && (\r\n        <FilterValue value={filter} onChangeFilter={changeFilter} />\r\n      )}\r\n      <ContactList items={filteredContacts} onDeleteContact={deleteContact} />\r\n    </PhonebookBlock>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport { save, get };\r\n","import React from 'react';\nimport Phonebook from './Components/Phonebook/Phonebook';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}